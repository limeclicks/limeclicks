# Generated by Django 5.2.5 on 2025-08-29 07:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_frequency_days', models.IntegerField(default=30, help_text='Days between automatic audits (minimum 30)')),
                ('manual_audit_frequency_days', models.IntegerField(default=3, help_text='Days between manual audits (minimum 3)')),
                ('is_audit_enabled', models.BooleanField(default=True, help_text='Enable/disable automatic audits')),
                ('max_pages_to_crawl', models.IntegerField(default=5000, help_text='Maximum pages to crawl per audit (subscription-based limit)')),
                ('last_automatic_audit', models.DateTimeField(blank=True, null=True)),
                ('last_manual_audit', models.DateTimeField(blank=True, null=True)),
                ('next_scheduled_audit', models.DateTimeField(blank=True, null=True)),
                ('last_audit_date', models.DateTimeField(blank=True, null=True)),
                ('broken_links_count', models.IntegerField(default=0)),
                ('redirect_chains_count', models.IntegerField(default=0)),
                ('missing_titles_count', models.IntegerField(default=0)),
                ('duplicate_titles_count', models.IntegerField(default=0)),
                ('missing_meta_descriptions_count', models.IntegerField(default=0)),
                ('duplicate_meta_descriptions_count', models.IntegerField(default=0)),
                ('blocked_by_robots_count', models.IntegerField(default=0)),
                ('missing_hreflang_count', models.IntegerField(default=0)),
                ('duplicate_content_count', models.IntegerField(default=0)),
                ('spelling_errors_count', models.IntegerField(default=0)),
                ('total_issues_count', models.IntegerField(default=0)),
                ('average_page_size_kb', models.FloatField(blank=True, null=True)),
                ('average_load_time_ms', models.FloatField(blank=True, null=True)),
                ('total_pages_crawled', models.IntegerField(default=0)),
                ('performance_score_mobile', models.IntegerField(blank=True, help_text='Latest mobile performance score from Lighthouse', null=True)),
                ('performance_score_desktop', models.IntegerField(blank=True, help_text='Latest desktop performance score from Lighthouse', null=True)),
                ('overall_site_health_score', models.FloatField(blank=True, help_text='Technical SEO health score based on issue density (100% technical)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='site_audits', to='project.project')),
            ],
            options={
                'verbose_name': 'On-Page Audit',
                'verbose_name_plural': 'On-Page Audits',
                'db_table': 'site_audits',
            },
        ),
        migrations.CreateModel(
            name='SiteIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('missing_title', 'Missing Page Title'), ('duplicate_title', 'Duplicate Page Title'), ('title_too_long', 'Page Title Too Long (>60 chars)'), ('title_too_short', 'Page Title Too Short (<30 chars)'), ('title_pixel_width', 'Title Pixel Width Too Long (>600px)'), ('missing_meta_description', 'Missing Meta Description'), ('duplicate_meta_description', 'Duplicate Meta Description'), ('meta_description_too_long', 'Meta Description Too Long (>160 chars)'), ('meta_description_too_short', 'Meta Description Too Short (<70 chars)'), ('meta_pixel_width', 'Meta Description Pixel Width Too Long'), ('missing_h1', 'Missing H1 Tag'), ('multiple_h1', 'Multiple H1 Tags'), ('duplicate_h1', 'Duplicate H1 Tag'), ('h1_too_long', 'H1 Too Long (>70 chars)'), ('h1_too_short', 'H1 Too Short (<20 chars)'), ('missing_h2', 'Missing H2 Tags'), ('duplicate_h2', 'Duplicate H2 Tags'), ('duplicate_content', 'Exact Duplicate Content'), ('near_duplicate', 'Near Duplicate Content'), ('thin_content', 'Low Word Count/Thin Content'), ('canonical_issue', 'Canonicalization Issue'), ('canonical_chain', 'Canonical Chain'), ('canonical_loop', 'Canonical Loop'), ('noindex_page', 'Noindex Page'), ('orphan_page', 'Orphan Page (No Internal Links)'), ('missing_alt_text', 'Missing Alt Text on Images'), ('missing_alt_linked', 'Missing Alt Text on Linked Images'), ('image_too_large', 'Image Too Large (>100KB)'), ('broken_image', 'Missing/Broken Image'), ('broken_internal_link', 'Broken Internal Link (404/5xx)'), ('broken_external_link', 'Broken External Link'), ('redirect_chain', 'Redirect Chain'), ('redirect_loop', 'Redirect Loop'), ('temporary_redirect', 'Temporary Redirect (302)'), ('permanent_redirect', 'Permanent Redirect (301)'), ('blocked_by_robots', 'Link Blocked by Robots.txt'), ('internal_nofollow', 'Internal Nofollow Link'), ('external_nofollow', 'External Nofollow Link'), ('missing_canonical', 'Missing Canonical Tag'), ('conflicting_canonical', 'Conflicting Canonical Tags'), ('multiple_canonical', 'Multiple Canonical Tags'), ('hreflang_missing_return', 'Hreflang Missing Return Link'), ('hreflang_invalid_code', 'Hreflang Invalid Language Code'), ('hreflang_no_self', 'Hreflang No Self-Reference'), ('meta_robots_issue', 'Meta Robots Tag Issue'), ('x_robots_issue', 'X-Robots-Tag Issue'), ('amp_error', 'AMP Error'), ('sitemap_mismatch', 'URL in Sitemap Not on Site'), ('sitemap_noindex', 'Sitemap Contains Noindex URLs'), ('sitemap_missing', 'Page Missing from Sitemap'), ('robots_blocked_resource', 'Robots.txt Blocked Resource'), ('crawl_depth_issue', 'Excessive Crawl Depth'), ('slow_page', 'Slow Page Load (>3s)'), ('mobile_usability', 'Mobile Usability Issue'), ('mixed_content', 'Mixed Content (HTTP on HTTPS)'), ('http_https_mismatch', 'HTTP/HTTPS Inconsistency'), ('non_200_status', 'Non-200 Status Code'), ('missing_structured_data', 'Missing Structured Data')], max_length=50)),
                ('severity', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('info', 'Info')], default='medium', max_length=20)),
                ('page_url', models.URLField(max_length=2000)),
                ('page_title', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.TextField()),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('status_code', models.IntegerField(blank=True, null=True)),
                ('response_time_ms', models.IntegerField(blank=True, null=True)),
                ('page_size_bytes', models.IntegerField(blank=True, null=True)),
                ('duplicate_urls', models.JSONField(blank=True, null=True)),
                ('similarity_score', models.FloatField(blank=True, null=True)),
                ('source_url', models.URLField(blank=True, max_length=2000, null=True)),
                ('anchor_text', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='site_issues', to='project.project')),
                ('site_audit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='site_audit.siteaudit')),
            ],
            options={
                'verbose_name': 'On-Page Issue',
                'verbose_name_plural': 'On-Page Issues',
                'db_table': 'onpage_issues',
            },
        ),
        migrations.AddIndex(
            model_name='siteaudit',
            index=models.Index(fields=['next_scheduled_audit'], name='site_audits_next_sc_012de4_idx'),
        ),
        migrations.AddIndex(
            model_name='siteaudit',
            index=models.Index(fields=['is_audit_enabled', 'next_scheduled_audit'], name='site_audits_is_audi_3d8674_idx'),
        ),
        migrations.AddIndex(
            model_name='siteissue',
            index=models.Index(fields=['project', 'issue_type'], name='onpage_issu_project_ac775f_idx'),
        ),
        migrations.AddIndex(
            model_name='siteissue',
            index=models.Index(fields=['site_audit', 'issue_type'], name='onpage_issu_site_au_85b3f8_idx'),
        ),
        migrations.AddIndex(
            model_name='siteissue',
            index=models.Index(fields=['severity'], name='onpage_issu_severit_085aae_idx'),
        ),
        migrations.AddIndex(
            model_name='siteissue',
            index=models.Index(fields=['page_url'], name='onpage_issu_page_ur_5d6ed5_idx'),
        ),
    ]
