"""
Django settings for limeclicks project.

Generated by 'django-admin startproject' using Django 5.1.11.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
from django.contrib.messages import constants as messages
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load env file
load_dotenv(BASE_DIR / ".env")

# Security
SECRET_KEY = os.getenv("SECRET_KEY")
DEBUG = os.getenv("DEBUG", "False").lower() in ("1", "true", "yes")
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "127.0.0.1,localhost,testserver").split(",")

# Application definition

INSTALLED_APPS = [
    'unfold',
    'unfold.contrib.filters',
    'unfold.contrib.forms',
    'unfold.contrib.simple_history',
    "admin_custom",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django_ckeditor_5",
    'simple_history',
    "django_htmx", 
    "crispy_forms", 
    "crispy_tailwind",
    "django_recaptcha",
    "accounts",
    "project",
    "siteconfig",
    "keywords",
    "site_audit",
    "django_celery_beat"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    "django_htmx.middleware.HtmxMiddleware",
    'accounts.session_fix_middleware.SessionFixMiddleware',  # Fix session issues after login
    # 'accounts.middleware.AuthenticationMiddleware',  # Temporarily disabled - may conflict
]

ROOT_URLCONF = 'limeclicks.urls'

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "limeclicks.context_processors.logos",
                "limeclicks.context_processors.site_settings",
            ],
        },
    },
]

WSGI_APPLICATION = 'limeclicks.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": dj_database_url.parse(
        os.getenv("DATABASE_URL"),
        conn_max_age=600,
    )
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

UNFOLD = {
    "SITE_TITLE": "LimeClicks Admin",
    "SITE_HEADER": "LimeClicks",
    "SITE_URL": "/",
    # Single logo configuration
    "LOGO": {
        "light": lambda request: "/static/admin/img/logo-main.png",  # Use main logo
        "dark": lambda request: "/static/admin/img/logo-main-dark.png",
    },
    "THEME": "light",
    "STYLES": [
        lambda request: "/static/admin/css/custom.css",
    ],
    "COLORS": {
        "primary": {
            "50": "#f0f9ff",
            "100": "#e0f2fe",
            "200": "#bae6fd",
            "300": "#7dd3fc",
            "400": "#38bdf8",
            "500": "#0ea5e9",
            "600": "#0284c7",
            "700": "#0369a1",
            "800": "#075985",
            "900": "#0c4a6e",
            "950": "#082f49",
        },
    },
    "EXTENSIONS": {
        "modeltranslation": {
            "flags": {
                "en": "ðŸ‡¬ðŸ‡§",
                "fr": "ðŸ‡«ðŸ‡·",
                "nl": "ðŸ‡³ðŸ‡±",
            },
        },
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": False,
        "navigation": [
            {
                "title": "Dashboard",
                "separator": False,
                "items": [
                    {
                        "title": "Overview",
                        "icon": "dashboard",
                        "link": "/admin/",
                    },
                ],
            },
            {
                "title": "SEO & Keywords",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Keywords",
                        "icon": "search",
                        "link": "/admin/keywords/keyword/",
                    },
                    {
                        "title": "Rankings",
                        "icon": "trending_up",
                        "link": "/admin/keywords/rank/",
                    },
                    {
                        "title": "Tags",
                        "icon": "label",
                        "link": "/admin/keywords/tag/",
                    },
                ],
            },
            {
                "title": "Projects",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "All Projects",
                        "icon": "folder",
                        "link": "/admin/project/project/",
                    },
                ],
            },
            {
                "title": "User Management",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Users",
                        "icon": "person",
                        "link": "/admin/accounts/user/",
                    },
                    {
                        "title": "Groups",
                        "icon": "group",
                        "link": "/admin/auth/group/",
                    },
                    {
                        "title": "Permissions",
                        "icon": "lock",
                        "link": "/admin/auth/permission/",
                    },
                ],
            },
            {
                "title": "System",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Site Configuration",
                        "icon": "settings",
                        "link": "/admin/siteconfig/siteconfiguration/",
                    },
                    {
                        "title": "Periodic Tasks",
                        "icon": "schedule",
                        "link": "/admin/django_celery_beat/periodictask/",
                    },
                    {
                        "title": "Task Intervals",
                        "icon": "timer",
                        "link": "/admin/django_celery_beat/intervalschedule/",
                    },
                    {
                        "title": "Crontabs",
                        "icon": "access_time",
                        "link": "/admin/django_celery_beat/crontabschedule/",
                    },
                ],
            },
        ],
    },
    "TABS": [
        {
            "models": ["keywords.Keyword"],
            "items": [
                {
                    "title": "Active Keywords",
                    "link": "/admin/keywords/keyword/?processing__exact=0&archive__exact=0",
                },
                {
                    "title": "Processing",
                    "link": "/admin/keywords/keyword/?processing__exact=1",
                },
                {
                    "title": "Archived",
                    "link": "/admin/keywords/keyword/?archive__exact=1",
                },
            ],
        },
    ],
}

CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind"
CRISPY_TEMPLATE_PACK = "tailwind"

TEMPLATES[0]["DIRS"] = [BASE_DIR / "templates"]

AUTH_USER_MODEL = 'accounts.User'

# Authentication URLs are configured at the bottom of the file

MESSAGE_TAGS = {
    messages.DEBUG: "alert",
    messages.INFO: "alert info",
    messages.SUCCESS: "alert success",
    messages.WARNING: "alert warning",
    messages.ERROR: "alert error",
}

EMAIL_BACKEND = "accounts.email_backend.BrevoEmailBackend"

# Brevo email configuration
DEFAULT_FROM_EMAIL = "noreply@limeclicks.com"

# reCAPTCHA settings
RECAPTCHA_PUBLIC_KEY = os.getenv("GOOGLE_RECAPTCHA_SITE_KEY", "your_site_key_here")
RECAPTCHA_PRIVATE_KEY = os.getenv("GOOGLE_RECAPTCHA_SECRET_KEY", "your_secret_key_here")
RECAPTCHA_REQUIRED_SCORE = 0.85

# Celery Configuration
CELERY_BROKER_URL = os.getenv("REDIS_URL", "redis://localhost:6379/0")
CELERY_RESULT_BACKEND = os.getenv("REDIS_URL", "redis://localhost:6379/0")
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE

# Celery task routing
CELERY_TASK_ROUTES = {
    'accounts.tasks.*': {'queue': 'accounts'},
    'limeclicks.tasks.*': {'queue': 'default'},
    'keywords.tasks.fetch_keyword_serp_html': {'queue': 'serp_default'},
}

# Celery beat schedule (for periodic tasks)
CELERY_BEAT_SCHEDULE = {
    # Clean expired verification tokens every hour
    'cleanup-expired-tokens': {
        'task': 'accounts.tasks.cleanup_expired_tokens',
        'schedule': 3600.0,  # Every hour
    },
    # Enqueue keywords for SERP scraping every minute
    'enqueue-keyword-scrapes': {
        'task': 'keywords.tasks.enqueue_keyword_scrapes_batch',
        'schedule': 60.0,  # Every minute (60 seconds)
    },
}

# Authentication settings
AUTHENTICATION_BACKENDS = [
    'accounts.backends.EmailBackend',  # Allow authentication with email
    'django.contrib.auth.backends.ModelBackend',  # Keep default username auth
]

LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/accounts/dashboard/'
LOGOUT_REDIRECT_URL = '/accounts/login/'

# Session configuration for proper login persistence
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Use database-backed sessions
SESSION_COOKIE_AGE = 86400 * 30  # 30 days
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_SAVE_EVERY_REQUEST = True  # Save session on every request
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# CSRF settings for secure form submissions
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_HTTPONLY = False  # Must be False for JavaScript access
CSRF_USE_SESSIONS = False  # Use cookies instead of sessions for CSRF

# Scrape.do API Configuration
SCRAPPER_API_KEY = os.getenv('SCRAPPER_API_KEY')

# Screaming Frog License
SCREAMING_FROG_LICENSE = os.getenv('SCREAMING_FROG_LICENSE')

# Google PageSpeed Insights API Key
GOOGLE_PSI_KEY = os.getenv('GOOGLE_PSI_KEY')

# AWS S3 Settings for django-storages (Cloudflare R2 is S3-compatible)
AWS_ACCESS_KEY_ID = os.getenv('R2_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.getenv('R2_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.getenv('R2_BUCKET_NAME')
AWS_S3_ENDPOINT_URL = os.getenv('R2_ENDPOINT_URL')
AWS_S3_REGION_NAME = 'auto'
AWS_S3_SIGNATURE_VERSION = 's3v4'
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
AWS_S3_VERIFY = True

# Optional: Use R2 for media files
# DEFAULT_FILE_STORAGE = 'services.storage_backends.R2MediaStorage'
# MEDIA_URL = f'{R2_ENDPOINT_URL}/{R2_BUCKET_NAME}/media/'

# Celery Configuration
CELERY_BROKER_URL = os.getenv('REDIS_URL', 'redis://localhost:6379/0')
CELERY_RESULT_BACKEND = os.getenv('REDIS_URL', 'redis://localhost:6379/0')
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

# SERP Scraping Configuration
SCRAPE_DO_STORAGE_ROOT = os.getenv('SCRAPE_DO_STORAGE_ROOT', os.path.join(BASE_DIR, 'storage', 'scrape_do'))
SCRAPE_DO_TIMEOUT = int(os.getenv('SCRAPE_DO_TIMEOUT', '60'))
SCRAPE_DO_RETRIES = int(os.getenv('SCRAPE_DO_RETRIES', '3'))
SERP_HISTORY_DAYS = int(os.getenv('SERP_HISTORY_DAYS', '7'))
FETCH_MIN_INTERVAL_HOURS = int(os.getenv('FETCH_MIN_INTERVAL_HOURS', '24'))