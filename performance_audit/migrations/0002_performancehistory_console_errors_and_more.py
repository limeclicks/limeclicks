# Generated by Django 5.2.5 on 2025-08-26 09:17

import django.core.validators
import django.db.models.deletion
import limeclicks.storage_backends
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('performance_audit', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='performancehistory',
            name='console_errors',
            field=models.JSONField(blank=True, default=list, help_text='Console errors found'),
        ),
        migrations.AddField(
            model_name='performancehistory',
            name='css_errors',
            field=models.JSONField(blank=True, default=list, help_text='CSS errors found'),
        ),
        migrations.AddField(
            model_name='performancehistory',
            name='error_report',
            field=models.FileField(blank=True, help_text='Consolidated error report JSON', null=True, storage=limeclicks.storage_backends.AuditJSONStorage(), upload_to=''),
        ),
        migrations.AddField(
            model_name='performancehistory',
            name='first_input_delay',
            field=models.FloatField(blank=True, help_text='FID in milliseconds', null=True),
        ),
        migrations.AddField(
            model_name='performancehistory',
            name='interaction_to_next_paint',
            field=models.FloatField(blank=True, help_text='INP in milliseconds', null=True),
        ),
        migrations.AddField(
            model_name='performancehistory',
            name='js_errors',
            field=models.JSONField(blank=True, default=list, help_text='JavaScript errors found'),
        ),
        migrations.AddField(
            model_name='performancehistory',
            name='network_errors',
            field=models.JSONField(blank=True, default=list, help_text='Network/resource errors found'),
        ),
        migrations.AddField(
            model_name='performancehistory',
            name='overall_score',
            field=models.IntegerField(blank=True, help_text='Average of all category scores', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='performancehistory',
            name='time_to_first_byte',
            field=models.FloatField(blank=True, help_text='TTFB in milliseconds', null=True),
        ),
        migrations.CreateModel(
            name='ConsolidatedErrors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('all_js_errors', models.JSONField(blank=True, default=list, help_text='All unique JS errors')),
                ('all_css_errors', models.JSONField(blank=True, default=list, help_text='All unique CSS errors')),
                ('all_console_errors', models.JSONField(blank=True, default=list, help_text='All unique console errors')),
                ('all_network_errors', models.JSONField(blank=True, default=list, help_text='All unique network errors')),
                ('consolidated_error_report', models.FileField(blank=True, help_text='Consolidated error report across mobile and desktop', null=True, storage=limeclicks.storage_backends.AuditJSONStorage(), upload_to='')),
                ('total_unique_errors', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('performance_page', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consolidated_errors', to='performance_audit.performancepage')),
            ],
            options={
                'verbose_name': 'Consolidated Error Report',
                'verbose_name_plural': 'Consolidated Error Reports',
                'db_table': 'performance_consolidated_errors',
            },
        ),
    ]
