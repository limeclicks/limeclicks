# Generated by Django 5.2.5 on 2025-08-29 07:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(db_index=True, max_length=255)),
                ('country', models.CharField(db_index=True, default='US', max_length=50)),
                ('country_code', models.CharField(db_index=True, default='US', max_length=10)),
                ('location', models.CharField(blank=True, help_text='Location for local search (e.g., "New York, NY, United States")', max_length=255, null=True)),
                ('uule', models.CharField(blank=True, help_text='UULE parameter for exact location targeting', max_length=255, null=True)),
                ('rank', models.IntegerField(db_index=True, default=0)),
                ('on_map', models.BooleanField(default=False)),
                ('rank_status', models.CharField(choices=[('no_change', 'No Change'), ('up', 'Up'), ('down', 'Down'), ('new', 'New')], default='no_change', max_length=20)),
                ('rank_diff_from_last_time', models.IntegerField(default=0)),
                ('rank_url', models.URLField(blank=True, max_length=500, null=True)),
                ('number_of_results', models.BigIntegerField(default=0)),
                ('initial_rank', models.IntegerField(blank=True, default=0, null=True)),
                ('highest_rank', models.IntegerField(default=0)),
                ('scraped_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('next_crawl_at', models.DateTimeField(blank=True, db_index=True, help_text='Next scheduled crawl time', null=True)),
                ('last_force_crawl_at', models.DateTimeField(blank=True, help_text='Last time force crawl was used', null=True)),
                ('crawl_priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('critical', 'Critical')], db_index=True, default='normal', max_length=20)),
                ('crawl_interval_hours', models.IntegerField(default=24, help_text='Hours between automatic crawls')),
                ('force_crawl_count', models.IntegerField(default=0, help_text='Number of times force crawl was used')),
                ('scrape_do_file_path', models.CharField(blank=True, help_text='Latest HTML file path', max_length=500, null=True)),
                ('scrape_do_files', models.JSONField(blank=True, default=list, help_text='Ordered list of HTML files, latest first')),
                ('scrape_do_at', models.DateTimeField(blank=True, null=True)),
                ('error', models.TextField(blank=True, default='')),
                ('last_error_message', models.CharField(blank=True, help_text='Minimal error message', max_length=255, null=True)),
                ('success_api_hit_count', models.IntegerField(default=0)),
                ('failed_api_hit_count', models.IntegerField(default=0)),
                ('ranking_pages', models.JSONField(blank=True, default=list, help_text='Top 3 ranking pages with URL and position')),
                ('impact', models.CharField(choices=[('no', 'No'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='no', max_length=20)),
                ('processing', models.BooleanField(db_index=True, default=False)),
                ('archive', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='project.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(db_index=True, default=0)),
                ('is_organic', models.BooleanField(default=True)),
                ('has_map_result', models.BooleanField(default=False)),
                ('has_video_result', models.BooleanField(default=False)),
                ('has_image_result', models.BooleanField(default=False)),
                ('search_results_file', models.CharField(blank=True, help_text='R2 path to parsed JSON results', max_length=500, null=True)),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ranks', to='keywords.keyword')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('slug', models.SlugField()),
                ('color', models.CharField(default='#6B7280', help_text='Hex color code', max_length=7)),
                ('description', models.TextField(blank=True, help_text='Optional description for this tag')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this tag is active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='User who owns this tag', on_delete=django.db.models.deletion.CASCADE, related_name='tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='KeywordTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword_tags', to='keywords.keyword')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyword_tags', to='keywords.tag')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='keyword',
            index=models.Index(fields=['project', 'keyword'], name='keywords_ke_project_0e6062_idx'),
        ),
        migrations.AddIndex(
            model_name='keyword',
            index=models.Index(fields=['project', 'rank'], name='keywords_ke_project_e1a208_idx'),
        ),
        migrations.AddIndex(
            model_name='keyword',
            index=models.Index(fields=['project', 'archive'], name='keywords_ke_project_4653d7_idx'),
        ),
        migrations.AddIndex(
            model_name='keyword',
            index=models.Index(fields=['project', '-created_at'], name='keywords_ke_project_e53f0f_idx'),
        ),
        migrations.AddIndex(
            model_name='keyword',
            index=models.Index(fields=['processing', 'archive'], name='keywords_ke_process_5d1a9f_idx'),
        ),
        migrations.AddIndex(
            model_name='keyword',
            index=models.Index(fields=['crawl_priority', 'next_crawl_at'], name='keywords_ke_crawl_p_26ec72_idx'),
        ),
        migrations.AddIndex(
            model_name='keyword',
            index=models.Index(fields=['next_crawl_at', 'processing'], name='keywords_ke_next_cr_a32ddd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='keyword',
            unique_together={('keyword', 'country', 'project')},
        ),
        migrations.AddIndex(
            model_name='rank',
            index=models.Index(fields=['keyword', '-created_at'], name='keywords_ra_keyword_c27a8d_idx'),
        ),
        migrations.AddIndex(
            model_name='rank',
            index=models.Index(fields=['keyword', 'rank'], name='keywords_ra_keyword_1a81f7_idx'),
        ),
        migrations.AddIndex(
            model_name='rank',
            index=models.Index(fields=['keyword', 'is_organic'], name='keywords_ra_keyword_9d4786_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['user', 'is_active'], name='keywords_ta_user_id_b525bb_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['user', 'slug'], name='keywords_ta_user_id_9de83e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('user', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='keywordtag',
            unique_together={('keyword', 'tag')},
        ),
    ]
